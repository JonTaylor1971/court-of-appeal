---
kind: Template
apiVersion: v1
metadata:
  name: ${NAME}-deployment-template
  annotations:
    description:
      Deployment template for a django server connected to a PostGreSQL
      database.
    tags: django
    iconClass: icon-python
objects:

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow the front-end application to access the API.
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  role: web
                  app: ${APP_NAME}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE_NAME}
                  environment: ${TAG_NAME}
          ports:
            - protocol: TCP
              port: 8080
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_NAME}
          env: ${TAG_NAME}

  # - kind: ExternalNetwork
  #   apiVersion: security.devops.gov.bc.ca/v1alpha1
  #   metadata:
  #     name: ${NAME}
  #     network: ${NAME}
  #     labels:
  #       name: ${NAME}
  #       network: ${NAME}
  #       app: ${APP_NAME}
  #       env: ${TAG_NAME}
  #   spec:
  #     description: |
  #       Define the network parameters for accessing remote resources.
  #     entries:
  #       # - ${OIDC_RP_HOST}
  #     servicePorts:
  #       - tcp/443

  # - kind: NetworkSecurityPolicy
  #   apiVersion: security.devops.gov.bc.ca/v1alpha1
  #   metadata:
  #     name: ${NAME}
  #     labels:
  #       name: ${NAME}
  #       app: ${APP_NAME}
  #       env: ${TAG_NAME}
  #   spec:
  #     description: |
  #       Allow the application's API to talk to either the database, plus a defined set of external resources.
  #     source:
  #       - - role=${ROLE}
  #         - app=${APP_NAME}
  #         - env=${TAG_NAME}
  #         - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
  #     destination:
  #       - - role=db
  #         - app=${APP_NAME}
  #         - env=${TAG_NAME}
  #         - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
  #       - - ext:name=${NAME}

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: "[{name: ${DATABASE_SERVICE_NAME}, kind: Service}]"
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          targetPort: 8080
      selector:
        name: ${NAME}

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      keycloak-auth-url: ${KEYCLOAK_AUTH_URL}
      keycloak-client-id: ${KEYCLOAK_CLIENT_ID}
      keycloak-realm: ${KEYCLOAK_REALM}
      keycloak-secret: ${KEYCLOAK_SECRET}

      cookie-secret: ${COOKIE_SECRET}

      encryption-key: ${DATA_SECURITY_KEY}
    type: Opaque

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        description: Defines how to deploy the application server
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_NAMESPACE}
              name: ${NAME}:${TAG_NAME}
        - type: ConfigChange
      replicas: 1
      selector:
        name: ${NAME}
      template:
        metadata:
          name: ${NAME}
          labels:
            name: ${NAME}
            app: ${APP_NAME}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          containers:
            - name: ${NAME}
              image:
              ports:
                - containerPort: 8080
                  protocol: TCP
              # readinessProbe:
              #   initialDelaySeconds: 3
              #   timeoutSeconds: 30
              #   httpGet:
              #     path: /health/
              #     port: 8080
              # livenessProbe:
              #   initialDelaySeconds: 120
              #   timeoutSeconds: 30
              #   httpGet:
              #     path: /health/
              #     port: 8080
              env:
                - name: PGHOST
                  value: ${DATABASE_SERVICE_NAME}
                - name: PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_DEPLOYMENT_NAME}
                      key: database-name
                - name: PGUSER
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_DEPLOYMENT_NAME}
                      key: database-user
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_DEPLOYMENT_NAME}
                      key: database-password

                - name: HUB_URL
                  value: ${HUB_URL}
                - name: HUB_TIMEOUT
                  value: ${HUB_TIMEOUT}

                - name: KEYCLOAK_AUTH_URL
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: keycloak-auth-url
                - name: KEYCLOAK_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: keycloak-client-id
                - name: KEYCLOAK_REALM
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: keycloak-realm
                - name: KEYCLOAK_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: keycloak-secret

                - name: COOKIE_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: cookie-secret

                - name: DATABASE_ENCRYPTION_KEY_32_BYTES
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: encryption-key

                - name: WEB_BASE_HREF
                  value: ${WEB_BASE_HREF}
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}

  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${NAME}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}

parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the OpenShift resources associated to the server instance.
    required: true
    value: api

  - name: APP_NAME
    displayName: App Name
    description: App Name
    required: true
    value: court-of-appeal
  - name: ROLE
    displayName: Role
    description: Role
    required: true
    value: api

  - name: NAMESPACE_NAME
    displayName: Namespace Name
    description: The base namespace name for the project.
    required: true
    value: 876c6c

  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description: The namespace of the OpenShift project containing the imagestream for the application.
    value: 876c6c-tools
  - name: DATABASE_SERVICE_NAME
    displayName: Database Service Name
    description: The name of the database server/service.
    required: true
    value: db
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    value: dev
    required: true
  - name: DATABASE_DEPLOYMENT_NAME
    displayName: Database Deployment Name
    description: The name associated to the database deployment resources.  In particular, this is used to wire up the credentials associated to the database.
    required: true
    value: db

  - name: HUB_URL
    displayName: Hub Url
    description: Hub Url
    required: false
    value: http://service:5000
  - name: HUB_TIMEOUT
    displayName: Hub Timeout
    description: Hub Timeout
    required: true
    value: "10000"

  - name: KEYCLOAK_AUTH_URL
    displayName: KeyCloak Authentication Url
    description: KeyCloak Authentication Url
    required: false
    value:
  - name: KEYCLOAK_REALM
    displayName: KeyCloak Realm
    description: KeyCloak Realm
    required: false
    value:
  - name: KEYCLOAK_CLIENT_ID
    displayName: KeyCloak Client Id
    description: KeyCloak Client Id
    required: false
    value:
  - name: KEYCLOAK_SECRET
    displayName: KeyCloak Client Secret
    description: KeyCloak Client Secret
    required: false
    value:

  - name: COOKIE_SECRET
    displayName: Cookie Secret
    description: Cookie Secret
    required: false
    value:

  - name: DATA_SECURITY_KEY
    displayName: Data Security (Encryption) Key
    description: The Encryption Key for the environment.
    generate: expression
    from: "[a-zA-Z0-9]{32}"

  - name: WEB_BASE_HREF
    displayName: Web Base Href
    description: Web Base Href
    required: false
    value: /court-of-appeal/

  - name: MIN_REPLICAS
    displayName: Minimum Replicas
    description: The minimum number of pods to have running.
    required: true
    value: "3"
  - name: MAX_REPLICAS
    displayName: Maximum Replicas
    description: The maximum number of pods to have running.
    required: true
    value: "6"

  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 250m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 500m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 256Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 512Mi
